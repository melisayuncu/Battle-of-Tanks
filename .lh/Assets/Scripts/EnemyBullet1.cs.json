{
    "sourceFile": "Assets/Scripts/EnemyBullet1.cs",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 45,
            "patches": [
                {
                    "date": 1703939012897,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1703939072112,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,46 +1,58 @@\n using System.Collections;\r\n-using System.Collections.Generic;\r\n using UnityEngine;\r\n \r\n public class EnemyBullet : MonoBehaviour\r\n {\r\n     private bool hasCausedDamage = false;\r\n     public int damage = 1;\r\n-    // Start is called before the first frame update\r\n+\r\n+    public GameObject explosionPrefab;\r\n+    public AudioSource explosionAudio;\r\n+    public ParticleSystem explosionParticles;\r\n+\r\n     void Start()\r\n     {\r\n-        \r\n+        explosionParticles = Instantiate(explosionPrefab).GetComponent<ParticleSystem>();\r\n+        explosionAudio = explosionParticles.GetComponent<AudioSource>();\r\n+        explosionParticles.gameObject.SetActive(false);\r\n     }\r\n \r\n-    // Update is called once per frame\r\n-    void Update()\r\n-    {\r\n-        \r\n-    }\r\n     void OnCollisionEnter(Collision col)\r\n     {\r\n         // Check if the collided object is an enemy\r\n         if (!hasCausedDamage && col.gameObject.CompareTag(\"Player\"))\r\n         {\r\n-            // Apply damage to the enemy\r\n-           \r\n+            // Apply damage to the player\r\n             PlayerHealth playerHealth = col.gameObject.GetComponent<PlayerHealth>();\r\n-                if (playerHealth != null)\r\n-                {\r\n-                     playerHealth.TakeDamage(damage);\r\n-                     Debug.Log(\"p damaged!\");\r\n-                     hasCausedDamage = true; // Set the flag to true to indicate that damage has been caused\r\n-                     Destroy(gameObject);\r\n-                }\r\n-                else\r\n+            if (playerHealth != null)\r\n             {\r\n-                Debug.LogError(\"phealth component not found on the collided object.\");\r\n+                playerHealth.TakeDamage(damage);\r\n+\r\n+                // Play explosion effect\r\n+                explosionParticles.transform.position = transform.position;\r\n+                explosionParticles.gameObject.SetActive(true);\r\n+                explosionParticles.Play();\r\n+                explosionAudio.Play();\r\n+\r\n+                // Wait for a delay before destroying the bullet\r\n+                StartCoroutine(DelayedDestroy(0.001f));\r\n+\r\n+                hasCausedDamage = true; // Set the flag to true to indicate that damage has been caused\r\n             }\r\n-            \r\n+            else\r\n+            {\r\n+                Debug.LogError(\"PlayerHealth component not found on the collided object.\");\r\n+            }\r\n         }\r\n         else\r\n         {\r\n-            Debug.Log(\"Collision with non-p object.\");\r\n+            Debug.Log(\"Collision with non-player object.\");\r\n         }\r\n     }\r\n+\r\n+    IEnumerator DelayedDestroy(float delay)\r\n+    {\r\n+        yield return new WaitForSeconds(delay);\r\n+        Destroy(gameObject);\r\n+    }\r\n }\r\n"
                },
                {
                    "date": 1704114589943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n             }\r\n         }\r\n         else\r\n         {\r\n-            Debug.Log(\"Collision with non-player object.\");\r\n+            \r\n         }\r\n     }\r\n \r\n     IEnumerator DelayedDestroy(float delay)\r\n"
                },
                {
                    "date": 1704114596863,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n             }\r\n         }\r\n         else\r\n         {\r\n-            \r\n+            if (!hasCausedDamage && col.gameObject.CompareTag(\"Floor\")\r\n         }\r\n     }\r\n \r\n     IEnumerator DelayedDestroy(float delay)\r\n"
                },
                {
                    "date": 1704114603490,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,8 +46,9 @@\n         }\r\n         else\r\n         {\r\n             if (!hasCausedDamage && col.gameObject.CompareTag(\"Floor\")\r\n+            Destroy(game)\r\n         }\r\n     }\r\n \r\n     IEnumerator DelayedDestroy(float delay)\r\n"
                },
                {
                    "date": 1704114611107,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,10 +45,10 @@\n             }\r\n         }\r\n         else\r\n         {\r\n-            if (!hasCausedDamage && col.gameObject.CompareTag(\"Floor\")\r\n-            Destroy(game)\r\n+            if (col.gameObject.CompareTag(\"Floor\")\r\n+            Destroy(gameObject)\r\n         }\r\n     }\r\n \r\n     IEnumerator DelayedDestroy(float delay)\r\n"
                },
                {
                    "date": 1704114616296,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,10 +45,10 @@\n             }\r\n         }\r\n         else\r\n         {\r\n-            if (col.gameObject.CompareTag(\"Floor\")\r\n-            Destroy(gameObject)\r\n+            if (col.gameObject.CompareTag(\"Floor\"){\r\n+            Destroy(gameObject);\r\n         }\r\n     }\r\n \r\n     IEnumerator DelayedDestroy(float delay)\r\n"
                },
                {
                    "date": 1704114637268,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n             }\r\n         }\r\n         else\r\n         {\r\n-            if (col.gameObject.CompareTag(\"Floor\"){\r\n+            if (col.gameObject.CompareTag(\"Floor\")){\r\n             Destroy(gameObject);\r\n         }\r\n     }\r\n \r\n"
                },
                {
                    "date": 1704114645850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,59 @@\n+using System.Collections;\r\n+using UnityEngine;\r\n+\r\n+public class EnemyBullet : MonoBehaviour\r\n+{\r\n+    private bool hasCausedDamage = false;\r\n+    public int damage = 1;\r\n+\r\n+    public GameObject explosionPrefab;\r\n+    public AudioSource explosionAudio;\r\n+    public ParticleSystem explosionParticles;\r\n+\r\n+    void Start()\r\n+    {\r\n+        explosionParticles = Instantiate(explosionPrefab).GetComponent<ParticleSystem>();\r\n+        explosionAudio = explosionParticles.GetComponent<AudioSource>();\r\n+        explosionParticles.gameObject.SetActive(false);\r\n+    }\r\n+\r\n+    void OnCollisionEnter(Collision col)\r\n+    {\r\n+        // Check if the collided object is an enemy\r\n+        if (!hasCausedDamage && col.gameObject.CompareTag(\"Player\"))\r\n+        {\r\n+            // Apply damage to the player\r\n+            PlayerHealth playerHealth = col.gameObject.GetComponent<PlayerHealth>();\r\n+            if (playerHealth != null)\r\n+            {\r\n+                playerHealth.TakeDamage(damage);\r\n+\r\n+                // Play explosion effect\r\n+                explosionParticles.transform.position = transform.position;\r\n+                explosionParticles.gameObject.SetActive(true);\r\n+                explosionParticles.Play();\r\n+                explosionAudio.Play();\r\n+\r\n+                // Wait for a delay before destroying the bullet\r\n+                StartCoroutine(DelayedDestroy(0.001f));\r\n+\r\n+                hasCausedDamage = true; // Set the flag to true to indicate that damage has been caused\r\n+            }\r\n+            else\r\n+            {\r\n+                Debug.LogError(\"PlayerHealth component not found on the collided object.\");\r\n+            }\r\n+        }\r\n+        else\r\n+        {\r\n+            if (col.gameObject.CompareTag(\"Floor\")){\r\n+            Destroy(gameObject);\r\n+        }\r\n+    }\r\n+\r\n+    IEnumerator DelayedDestroy(float delay)\r\n+    {\r\n+        yield return new WaitForSeconds(delay);\r\n+        Destroy(gameObject);\r\n+    }\r\n+}}\r\n"
                },
                {
                    "date": 1704114660638,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n             {\r\n                 Debug.LogError(\"PlayerHealth component not found on the collided object.\");\r\n             }\r\n         }\r\n-        else\r\n+        if\r\n         {\r\n             if (col.gameObject.CompareTag(\"Floor\")){\r\n             Destroy(gameObject);\r\n         }\r\n@@ -56,63 +56,4 @@\n         yield return new WaitForSeconds(delay);\r\n         Destroy(gameObject);\r\n     }\r\n }}\r\n-using System.Collections;\r\n-using UnityEngine;\r\n-\r\n-public class EnemyBullet : MonoBehaviour\r\n-{\r\n-    private bool hasCausedDamage = false;\r\n-    public int damage = 1;\r\n-\r\n-    public GameObject explosionPrefab;\r\n-    public AudioSource explosionAudio;\r\n-    public ParticleSystem explosionParticles;\r\n-\r\n-    void Start()\r\n-    {\r\n-        explosionParticles = Instantiate(explosionPrefab).GetComponent<ParticleSystem>();\r\n-        explosionAudio = explosionParticles.GetComponent<AudioSource>();\r\n-        explosionParticles.gameObject.SetActive(false);\r\n-    }\r\n-\r\n-    void OnCollisionEnter(Collision col)\r\n-    {\r\n-        // Check if the collided object is an enemy\r\n-        if (!hasCausedDamage && col.gameObject.CompareTag(\"Player\"))\r\n-        {\r\n-            // Apply damage to the player\r\n-            PlayerHealth playerHealth = col.gameObject.GetComponent<PlayerHealth>();\r\n-            if (playerHealth != null)\r\n-            {\r\n-                playerHealth.TakeDamage(damage);\r\n-\r\n-                // Play explosion effect\r\n-                explosionParticles.transform.position = transform.position;\r\n-                explosionParticles.gameObject.SetActive(true);\r\n-                explosionParticles.Play();\r\n-                explosionAudio.Play();\r\n-\r\n-                // Wait for a delay before destroying the bullet\r\n-                StartCoroutine(DelayedDestroy(0.001f));\r\n-\r\n-                hasCausedDamage = true; // Set the flag to true to indicate that damage has been caused\r\n-            }\r\n-            else\r\n-            {\r\n-                Debug.LogError(\"PlayerHealth component not found on the collided object.\");\r\n-            }\r\n-        }\r\n-        else\r\n-        {\r\n-            if (col.gameObject.CompareTag(\"Floor\")){\r\n-            Destroy(gameObject);\r\n-        }\r\n-    }\r\n-\r\n-    IEnumerator DelayedDestroy(float delay)\r\n-    {\r\n-        yield return new WaitForSeconds(delay);\r\n-        Destroy(gameObject);\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1704114669372,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n             {\r\n                 Debug.LogError(\"PlayerHealth component not found on the collided object.\");\r\n             }\r\n         }\r\n-        if\r\n+        else if\r\n         {\r\n             if (col.gameObject.CompareTag(\"Floor\")){\r\n             Destroy(gameObject);\r\n         }\r\n"
                },
                {
                    "date": 1704114675001,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n             {\r\n                 Debug.LogError(\"PlayerHealth component not found on the collided object.\");\r\n             }\r\n         }\r\n-        else if\r\n+        else\r\n         {\r\n             if (col.gameObject.CompareTag(\"Floor\")){\r\n             Destroy(gameObject);\r\n         }\r\n"
                },
                {
                    "date": 1704114822388,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n     }\r\n \r\n     void OnCollisionEnter(Collision col)\r\n     {\r\n-        // Check if the collided object is an enemy\r\n+        // Check if the collided object is the player\r\n         if (!hasCausedDamage && col.gameObject.CompareTag(\"Player\"))\r\n         {\r\n             // Apply damage to the player\r\n             PlayerHealth playerHealth = col.gameObject.GetComponent<PlayerHealth>();\r\n"
                },
                {
                    "date": 1704115573266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n             }\r\n         }\r\n         else\r\n         {\r\n-            if (col.gameObject.CompareTag(\"Floor\")){\r\n+            if (col.gameObject.CompareTag(\"Ground\")){\r\n             Destroy(gameObject);\r\n         }\r\n     }\r\n \r\n"
                },
                {
                    "date": 1704115893153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n     }\r\n \r\n     void OnCollisionEnter(Collision col)\r\n     {\r\n-        // Check if the collided object is the player\r\n+        // Check if the collided object is an enemy\r\n         if (!hasCausedDamage && col.gameObject.CompareTag(\"Player\"))\r\n         {\r\n             // Apply damage to the player\r\n             PlayerHealth playerHealth = col.gameObject.GetComponent<PlayerHealth>();\r\n@@ -45,15 +45,14 @@\n             }\r\n         }\r\n         else\r\n         {\r\n-            if (col.gameObject.CompareTag(\"Ground\")){\r\n-            Destroy(gameObject);\r\n+            Debug.Log(\"Collision with non-player object.\");\r\n         }\r\n     }\r\n \r\n     IEnumerator DelayedDestroy(float delay)\r\n     {\r\n         yield return new WaitForSeconds(delay);\r\n         Destroy(gameObject);\r\n     }\r\n-}}\r\n+}\r\n"
                },
                {
                    "date": 1704115924821,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,10 @@\n             }\r\n         }\r\n         else\r\n         {\r\n-            Debug.Log(\"Collision with non-player object.\");\r\n+            if (col.gameObject.CompareTag(\"Ground\")){\r\n+            Destroy(gameObject);\r\n         }\r\n     }\r\n \r\n     IEnumerator DelayedDestroy(float delay)\r\n"
                },
                {
                    "date": 1704115953537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n         }\r\n         else\r\n         {\r\n             if (col.gameObject.CompareTag(\"Ground\")){\r\n-            Destroy(gameObject);\r\n+            StartCoroutine(DelayedDestroy(0.001f));\r\n         }\r\n     }\r\n \r\n     IEnumerator DelayedDestroy(float delay)\r\n"
                },
                {
                    "date": 1704115979906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n             }\r\n         }\r\n         else\r\n         {\r\n-            if (col.gameObject.CompareTag(\"Ground\")){\r\n+            {\r\n             StartCoroutine(DelayedDestroy(0.001f));\r\n         }\r\n     }\r\n \r\n"
                },
                {
                    "date": 1704116027146,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,10 +45,9 @@\n             }\r\n         }\r\n         else\r\n         {\r\n-            {\r\n-            StartCoroutine(DelayedDestroy(0.001f));\r\n+            Debug.Log(\"Collision with non-player object.\");\r\n         }\r\n     }\r\n \r\n     IEnumerator DelayedDestroy(float delay)\r\n"
                },
                {
                    "date": 1704116037949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,8 +45,9 @@\n             }\r\n         }\r\n         else\r\n         {\r\n+            StartCoroutine(DelayedDestroy(0.001f));\r\n             Debug.Log(\"Collision with non-player object.\");\r\n         }\r\n     }\r\n \r\n"
                },
                {
                    "date": 1704116050443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n             }\r\n         }\r\n         else\r\n         {\r\n-            StartCoroutine(DelayedDestroy(0.001f));\r\n+            if(col.gameObject.CompareTag(\"Player\")))\r\n             Debug.Log(\"Collision with non-player object.\");\r\n         }\r\n     }\r\n \r\n"
                },
                {
                    "date": 1704116060192,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,12 @@\n             }\r\n         }\r\n         else\r\n         {\r\n-            if(col.gameObject.CompareTag(\"Player\")))\r\n+            if(col.gameObject.CompareTag(\"Player\")){\r\n+                                StartCoroutine(DelayedDestroy(0.001f));\r\n+\r\n+            }\r\n             Debug.Log(\"Collision with non-player object.\");\r\n         }\r\n     }\r\n \r\n"
                },
                {
                    "date": 1704116066840,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,8 +49,9 @@\n             if(col.gameObject.CompareTag(\"Player\")){\r\n                                 StartCoroutine(DelayedDestroy(0.001f));\r\n \r\n             }\r\n+            else\r\n             Debug.Log(\"Collision with non-player object.\");\r\n         }\r\n     }\r\n \r\n"
                },
                {
                    "date": 1704116072373,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,63 @@\n+using System.Collections;\r\n+using UnityEngine;\r\n+\r\n+public class EnemyBullet : MonoBehaviour\r\n+{\r\n+    private bool hasCausedDamage = false;\r\n+    public int damage = 1;\r\n+\r\n+    public GameObject explosionPrefab;\r\n+    public AudioSource explosionAudio;\r\n+    public ParticleSystem explosionParticles;\r\n+\r\n+    void Start()\r\n+    {\r\n+        explosionParticles = Instantiate(explosionPrefab).GetComponent<ParticleSystem>();\r\n+        explosionAudio = explosionParticles.GetComponent<AudioSource>();\r\n+        explosionParticles.gameObject.SetActive(false);\r\n+    }\r\n+\r\n+    void OnCollisionEnter(Collision col)\r\n+    {\r\n+        // Check if the collided object is an enemy\r\n+        if (!hasCausedDamage && col.gameObject.CompareTag(\"Player\"))\r\n+        {\r\n+            // Apply damage to the player\r\n+            PlayerHealth playerHealth = col.gameObject.GetComponent<PlayerHealth>();\r\n+            if (playerHealth != null)\r\n+            {\r\n+                playerHealth.TakeDamage(damage);\r\n+\r\n+                // Play explosion effect\r\n+                explosionParticles.transform.position = transform.position;\r\n+                explosionParticles.gameObject.SetActive(true);\r\n+                explosionParticles.Play();\r\n+                explosionAudio.Play();\r\n+\r\n+                // Wait for a delay before destroying the bullet\r\n+                StartCoroutine(DelayedDestroy(0.001f));\r\n+\r\n+                hasCausedDamage = true; // Set the flag to true to indicate that damage has been caused\r\n+            }\r\n+            else\r\n+            {\r\n+                Debug.LogError(\"PlayerHealth component not found on the collided object.\");\r\n+            }\r\n+        }\r\n+        else\r\n+        {\r\n+            if(col.gameObject.CompareTag(\"Player\")){\r\n+                                StartCoroutine(DelayedDestroy(0.001f));\r\n+\r\n+            }\r\n+            else{\r\n+            Debug.Log(\"Collision with non-player object.\");\r\n+        }\r\n+    }\r\n+\r\n+    IEnumerator DelayedDestroy(float delay)\r\n+    {\r\n+        yield return new WaitForSeconds(delay);\r\n+        Destroy(gameObject);\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1704116083608,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,72 +51,10 @@\n \r\n             }\r\n             else{\r\n             Debug.Log(\"Collision with non-player object.\");\r\n-        }\r\n-    }\r\n-\r\n-    IEnumerator DelayedDestroy(float delay)\r\n-    {\r\n-        yield return new WaitForSeconds(delay);\r\n-        Destroy(gameObject);\r\n-    }\r\n-}\r\n-using System.Collections;\r\n-using UnityEngine;\r\n-\r\n-public class EnemyBullet : MonoBehaviour\r\n-{\r\n-    private bool hasCausedDamage = false;\r\n-    public int damage = 1;\r\n-\r\n-    public GameObject explosionPrefab;\r\n-    public AudioSource explosionAudio;\r\n-    public ParticleSystem explosionParticles;\r\n-\r\n-    void Start()\r\n-    {\r\n-        explosionParticles = Instantiate(explosionPrefab).GetComponent<ParticleSystem>();\r\n-        explosionAudio = explosionParticles.GetComponent<AudioSource>();\r\n-        explosionParticles.gameObject.SetActive(false);\r\n-    }\r\n-\r\n-    void OnCollisionEnter(Collision col)\r\n-    {\r\n-        // Check if the collided object is an enemy\r\n-        if (!hasCausedDamage && col.gameObject.CompareTag(\"Player\"))\r\n-        {\r\n-            // Apply damage to the player\r\n-            PlayerHealth playerHealth = col.gameObject.GetComponent<PlayerHealth>();\r\n-            if (playerHealth != null)\r\n-            {\r\n-                playerHealth.TakeDamage(damage);\r\n-\r\n-                // Play explosion effect\r\n-                explosionParticles.transform.position = transform.position;\r\n-                explosionParticles.gameObject.SetActive(true);\r\n-                explosionParticles.Play();\r\n-                explosionAudio.Play();\r\n-\r\n-                // Wait for a delay before destroying the bullet\r\n-                StartCoroutine(DelayedDestroy(0.001f));\r\n-\r\n-                hasCausedDamage = true; // Set the flag to true to indicate that damage has been caused\r\n             }\r\n-            else\r\n-            {\r\n-                Debug.LogError(\"PlayerHealth component not found on the collided object.\");\r\n-            }\r\n         }\r\n-        else\r\n-        {\r\n-            if(col.gameObject.CompareTag(\"Player\")){\r\n-                                StartCoroutine(DelayedDestroy(0.001f));\r\n-\r\n-            }\r\n-            else\r\n-            Debug.Log(\"Collision with non-player object.\");\r\n-        }\r\n     }\r\n \r\n     IEnumerator DelayedDestroy(float delay)\r\n     {\r\n"
                },
                {
                    "date": 1704116091825,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n             }\r\n         }\r\n         else\r\n         {\r\n-            if(col.gameObject.CompareTag(\"Player\")){\r\n+            if(col.gameObject.CompareTag(\"Ground\")){\r\n                                 StartCoroutine(DelayedDestroy(0.001f));\r\n \r\n             }\r\n             else{\r\n"
                },
                {
                    "date": 1704117376648,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,10 @@\n \r\n public class EnemyBullet : MonoBehaviour\r\n {\r\n     private bool hasCausedDamage = false;\r\n+\r\n+    private bool hasCausedDamage = false;\r\n     public int damage = 1;\r\n \r\n     public GameObject explosionPrefab;\r\n     public AudioSource explosionAudio;\r\n"
                },
                {
                    "date": 1704117390930,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n public class EnemyBullet : MonoBehaviour\r\n {\r\n     private bool hasCausedDamage = false;\r\n \r\n-    private bool hasCausedDamage = false;\r\n+    private bool so = false;\r\n     public int damage = 1;\r\n \r\n     public GameObject explosionPrefab;\r\n     public AudioSource explosionAudio;\r\n"
                },
                {
                    "date": 1704117404050,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n public class EnemyBullet : MonoBehaviour\r\n {\r\n     private bool hasCausedDamage = false;\r\n \r\n-    private bool so = false;\r\n+    private bool shouldamage = false;\r\n     public int damage = 1;\r\n \r\n     public GameObject explosionPrefab;\r\n     public AudioSource explosionAudio;\r\n"
                },
                {
                    "date": 1704117414277,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n \r\n     void OnCollisionEnter(Collision col)\r\n     {\r\n         // Check if the collided object is an enemy\r\n-        if (!hasCausedDamage && col.gameObject.CompareTag(\"Player\"))\r\n+        if (!hasCausedDamage && !hasCausedDamage col.gameObject.CompareTag(\"Player\"))\r\n         {\r\n             // Apply damage to the player\r\n             PlayerHealth playerHealth = col.gameObject.GetComponent<PlayerHealth>();\r\n             if (playerHealth != null)\r\n"
                },
                {
                    "date": 1704117430921,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n \r\n     void OnCollisionEnter(Collision col)\r\n     {\r\n         // Check if the collided object is an enemy\r\n-        if (!hasCausedDamage && !hasCausedDamage col.gameObject.CompareTag(\"Player\"))\r\n+        if (!hasCausedDamage && !shouldamage col.gameObject.CompareTag(\"Player\"))\r\n         {\r\n             // Apply damage to the player\r\n             PlayerHealth playerHealth = col.gameObject.GetComponent<PlayerHealth>();\r\n             if (playerHealth != null)\r\n"
                },
                {
                    "date": 1704117437127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n \r\n     void OnCollisionEnter(Collision col)\r\n     {\r\n         // Check if the collided object is an enemy\r\n-        if (!hasCausedDamage && !shouldamage col.gameObject.CompareTag(\"Player\"))\r\n+        if (!hasCausedDamage && !shouldamage && col.gameObject.CompareTag(\"Player\"))\r\n         {\r\n             // Apply damage to the player\r\n             PlayerHealth playerHealth = col.gameObject.GetComponent<PlayerHealth>();\r\n             if (playerHealth != null)\r\n"
                },
                {
                    "date": 1704117447655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n public class EnemyBullet : MonoBehaviour\r\n {\r\n     private bool hasCausedDamage = false;\r\n \r\n-    private bool shouldamage = false;\r\n+    private bool shouldamage = true;\r\n     public int damage = 1;\r\n \r\n     public GameObject explosionPrefab;\r\n     public AudioSource explosionAudio;\r\n"
                },
                {
                    "date": 1704117460538,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n \r\n     void OnCollisionEnter(Collision col)\r\n     {\r\n         // Check if the collided object is an enemy\r\n-        if (!hasCausedDamage && !shouldamage && col.gameObject.CompareTag(\"Player\"))\r\n+        if (!hasCausedDamage && shouldamage && col.gameObject.CompareTag(\"Player\"))\r\n         {\r\n             // Apply damage to the player\r\n             PlayerHealth playerHealth = col.gameObject.GetComponent<PlayerHealth>();\r\n             if (playerHealth != null)\r\n"
                },
                {
                    "date": 1704117474048,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,8 +49,9 @@\n         else\r\n         {\r\n             if(col.gameObject.CompareTag(\"Ground\")){\r\n                                 StartCoroutine(DelayedDestroy(0.001f));\r\n+                                shouldamage\r\n \r\n             }\r\n             else{\r\n             Debug.Log(\"Collision with non-player object.\");\r\n"
                },
                {
                    "date": 1704117479146,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n         else\r\n         {\r\n             if(col.gameObject.CompareTag(\"Ground\")){\r\n                                 StartCoroutine(DelayedDestroy(0.001f));\r\n-                                shouldamage\r\n+                                shouldamage = false;\r\n \r\n             }\r\n             else{\r\n             Debug.Log(\"Collision with non-player object.\");\r\n"
                },
                {
                    "date": 1704117650567,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,8 @@\n         }\r\n         else\r\n         {\r\n             if(col.gameObject.CompareTag(\"Ground\")){\r\n-                                StartCoroutine(DelayedDestroy(0.001f));\r\n                                 shouldamage = false;\r\n \r\n             }\r\n             else{\r\n"
                },
                {
                    "date": 1704118049650,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,8 +20,9 @@\n     }\r\n \r\n     void OnCollisionEnter(Collision col)\r\n     {\r\n+        shouldamage = false;\r\n         // Check if the collided object is an enemy\r\n         if (!hasCausedDamage && shouldamage && col.gameObject.CompareTag(\"Player\"))\r\n         {\r\n             // Apply damage to the player\r\n"
                },
                {
                    "date": 1704118060477,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n     void OnCollisionEnter(Collision col)\r\n     {\r\n         shouldamage = false;\r\n         // Check if the collided object is an enemy\r\n-        if (!hasCausedDamage && shouldamage && col.gameObject.CompareTag(\"Player\"))\r\n+        if (!hasCausedDamage && col.gameObject.CompareTag(\"Player\"))\r\n         {\r\n             // Apply damage to the player\r\n             PlayerHealth playerHealth = col.gameObject.GetComponent<PlayerHealth>();\r\n             if (playerHealth != null)\r\n"
                },
                {
                    "date": 1704118073069,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,68 @@\n+using System.Collections;\r\n+using UnityEngine;\r\n+\r\n+public class EnemyBullet : MonoBehaviour\r\n+{\r\n+    private bool hasCausedDamage = false;\r\n+\r\n+    private bool shouldamage = true;\r\n+    public int damage = 1;\r\n+\r\n+    public GameObject explosionPrefab;\r\n+    public AudioSource explosionAudio;\r\n+    public ParticleSystem explosionParticles;\r\n+\r\n+    void Start()\r\n+    {\r\n+        explosionParticles = Instantiate(explosionPrefab).GetComponent<ParticleSystem>();\r\n+        explosionAudio = explosionParticles.GetComponent<AudioSource>();\r\n+        explosionParticles.gameObject.SetActive(false);\r\n+    }\r\n+\r\n+    void OnCollisionEnter(Collision col)\r\n+    {\r\n+        shouldamage = false;\r\n+        // Check if the collided object is an enemy\r\n+        if (!hasCausedDamage && col.gameObject.CompareTag(\"Player\"))\r\n+        {\r\n+            // Apply damage to the player\r\n+            PlayerHealth playerHealth = col.gameObject.GetComponent<PlayerHealth>();\r\n+            if (playerHealth != null)\r\n+            {\r\n+                playerHealth.TakeDamage(damage);\r\n+\r\n+                // Play explosion effect\r\n+                explosionParticles.transform.position = transform.position;\r\n+                explosionParticles.gameObject.SetActive(true);\r\n+                explosionParticles.Play();\r\n+                explosionAudio.Play();\r\n+\r\n+                // Wait for a delay before destroying the bullet\r\n+                StartCoroutine(DelayedDestroy(0.001f));\r\n+\r\n+                hasCausedDamage = true; // Set the flag to true to indicate that damage has been caused\r\n+            }\r\n+            else\r\n+            {\r\n+                Debug.LogError(\"PlayerHealth component not found on the collided object.\");\r\n+            }\r\n+        }\r\n+        else\r\n+        {\r\n+            if(col.gameObject.CompareTag(\"Ground\")){\r\n+                                            StartCoroutine(DelayedDestroy(0.001f));\r\n+\r\n+\r\n+            }\r\n+            else{\r\n+            Debug.Log(\"Collision with non-player object.\");\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    IEnumerator DelayedDestroy(float delay)\r\n+    {\r\n+        yield return new WaitForSeconds(delay);\r\n+        Destroy(gameObject);\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1704118169957,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,8 @@\n public class EnemyBullet : MonoBehaviour\r\n {\r\n     private bool hasCausedDamage = false;\r\n \r\n-    private bool shouldamage = true;\r\n     public int damage = 1;\r\n \r\n     public GameObject explosionPrefab;\r\n     public AudioSource explosionAudio;\r\n@@ -65,71 +64,4 @@\n         yield return new WaitForSeconds(delay);\r\n         Destroy(gameObject);\r\n     }\r\n }\r\n-using System.Collections;\r\n-using UnityEngine;\r\n-\r\n-public class EnemyBullet : MonoBehaviour\r\n-{\r\n-    private bool hasCausedDamage = false;\r\n-\r\n-    private bool shouldamage = true;\r\n-    public int damage = 1;\r\n-\r\n-    public GameObject explosionPrefab;\r\n-    public AudioSource explosionAudio;\r\n-    public ParticleSystem explosionParticles;\r\n-\r\n-    void Start()\r\n-    {\r\n-        explosionParticles = Instantiate(explosionPrefab).GetComponent<ParticleSystem>();\r\n-        explosionAudio = explosionParticles.GetComponent<AudioSource>();\r\n-        explosionParticles.gameObject.SetActive(false);\r\n-    }\r\n-\r\n-    void OnCollisionEnter(Collision col)\r\n-    {\r\n-        shouldamage = false;\r\n-        // Check if the collided object is an enemy\r\n-        if (!hasCausedDamage && col.gameObject.CompareTag(\"Player\"))\r\n-        {\r\n-            // Apply damage to the player\r\n-            PlayerHealth playerHealth = col.gameObject.GetComponent<PlayerHealth>();\r\n-            if (playerHealth != null)\r\n-            {\r\n-                playerHealth.TakeDamage(damage);\r\n-\r\n-                // Play explosion effect\r\n-                explosionParticles.transform.position = transform.position;\r\n-                explosionParticles.gameObject.SetActive(true);\r\n-                explosionParticles.Play();\r\n-                explosionAudio.Play();\r\n-\r\n-                // Wait for a delay before destroying the bullet\r\n-                StartCoroutine(DelayedDestroy(0.001f));\r\n-\r\n-                hasCausedDamage = true; // Set the flag to true to indicate that damage has been caused\r\n-            }\r\n-            else\r\n-            {\r\n-                Debug.LogError(\"PlayerHealth component not found on the collided object.\");\r\n-            }\r\n-        }\r\n-        else\r\n-        {\r\n-            if(col.gameObject.CompareTag(\"Ground\")){\r\n-                                shouldamage = false;\r\n-\r\n-            }\r\n-            else{\r\n-            Debug.Log(\"Collision with non-player object.\");\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    IEnumerator DelayedDestroy(float delay)\r\n-    {\r\n-        yield return new WaitForSeconds(delay);\r\n-        Destroy(gameObject);\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1704118175002,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n     }\r\n \r\n     void OnCollisionEnter(Collision col)\r\n     {\r\n-        shouldamage = false;\r\n+        \r\n         // Check if the collided object is an enemy\r\n         if (!hasCausedDamage && col.gameObject.CompareTag(\"Player\"))\r\n         {\r\n             // Apply damage to the player\r\n"
                },
                {
                    "date": 1704118391828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,8 +49,9 @@\n         else\r\n         {\r\n             if(col.gameObject.CompareTag(\"Ground\")){\r\n                                             StartCoroutine(DelayedDestroy(0.001f));\r\n+                                            Debug.Log(\"Collision with non-player object.\");\r\n \r\n \r\n             }\r\n             else{\r\n"
                },
                {
                    "date": 1704118492433,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,11 +47,11 @@\n             }\r\n         }\r\n         else\r\n         {\r\n-            if(col.gameObject.CompareTag(\"Ground\")){\r\n+            if(col.gameObject.CompareTag(\"Floor\")){\r\n                                             StartCoroutine(DelayedDestroy(0.001f));\r\n-                                            Debug.Log(\"Collision with non-player object.\");\r\n+                                            Debug.Log(\"sex\");\r\n \r\n \r\n             }\r\n             else{\r\n"
                },
                {
                    "date": 1704119965403,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n         }\r\n         else\r\n         {\r\n             if(col.gameObject.CompareTag(\"Floor\")){\r\n-                                            StartCoroutine(DelayedDestroy(0.001f));\r\n+                                            StartCoroutine(DelayedDestroy(0.5f));\r\n                                             Debug.Log(\"sex\");\r\n \r\n \r\n             }\r\n"
                },
                {
                    "date": 1704120040569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n         else\r\n         {\r\n             if(col.gameObject.CompareTag(\"Floor\")){\r\n                                             StartCoroutine(DelayedDestroy(0.5f));\r\n-                                            Debug.Log(\"sex\");\r\n+                                            \r\n \r\n \r\n             }\r\n             else{\r\n"
                }
            ],
            "date": 1703939012897,
            "name": "Commit-0",
            "content": "using System.Collections;\r\nusing System.Collections.Generic;\r\nusing UnityEngine;\r\n\r\npublic class EnemyBullet : MonoBehaviour\r\n{\r\n    private bool hasCausedDamage = false;\r\n    public int damage = 1;\r\n    // Start is called before the first frame update\r\n    void Start()\r\n    {\r\n        \r\n    }\r\n\r\n    // Update is called once per frame\r\n    void Update()\r\n    {\r\n        \r\n    }\r\n    void OnCollisionEnter(Collision col)\r\n    {\r\n        // Check if the collided object is an enemy\r\n        if (!hasCausedDamage && col.gameObject.CompareTag(\"Player\"))\r\n        {\r\n            // Apply damage to the enemy\r\n           \r\n            PlayerHealth playerHealth = col.gameObject.GetComponent<PlayerHealth>();\r\n                if (playerHealth != null)\r\n                {\r\n                     playerHealth.TakeDamage(damage);\r\n                     Debug.Log(\"p damaged!\");\r\n                     hasCausedDamage = true; // Set the flag to true to indicate that damage has been caused\r\n                     Destroy(gameObject);\r\n                }\r\n                else\r\n            {\r\n                Debug.LogError(\"phealth component not found on the collided object.\");\r\n            }\r\n            \r\n        }\r\n        else\r\n        {\r\n            Debug.Log(\"Collision with non-p object.\");\r\n        }\r\n    }\r\n}\r\n"
        }
    ]
}